{
  // git
  "git.autorefresh": true,
  "git.autofetch": true,
  "git.fetchOnPull": true,
  "git.pruneOnFetch": true,
  "git.pullBeforeCheckout": true,
  "git.branchProtection": [
    "main"
  ],
  "git.mergeEditor": true,
  "git.enableSmartCommit": true,
  // github
  "github.branchProtection": true,
  "githubPullRequests.showPullRequestNumberInTree": true,
  // files
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.associations": {
    "CODEOWNERS": "ignore",
    "**/.github/workflows/*.y*ml": "yaml",
    "*.env*": "properties",
    ".lycheeignore": "ignore"
  },
  // editor
  "editor.inlineSuggest.enabled": true,
  "editor.detectIndentation": true,
  "editor.formatOnSave": true,
  // markdown
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  "markdownlint.config": {
    "extends": "./.markdownlint.yml"
  },
  "markdown.extension.toc.levels": "2..6",
  "markdown.extension.toc.updateOnSave": true,
  "markdown.extension.tableFormatter.normalizeIndentation": true,
  "markdown.extension.tableFormatter.delimiterRowNoPadding": true,
  "markdown.extension.toc.slugifyMode": "github",
  "markdown.extension.toc.unorderedList.marker": "-",
  "markdown.extension.orderedList.marker": "one",
  "markdown.extension.print.absoluteImgPath": true,
  // yaml
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "yaml.format.singleQuote": false,
  "yaml.schemaStore.enable": true,
  // json
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "json.schemas": [
    {
      "fileMatch": [
        "devContainer.json"
      ],
      "url": "https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.schema.json"
    }
  ],
  // others
  "dotenv.enableAutocloaking": false,
  "prettier.configPath": ".prettierrc.yml",
  "eslint.format.enable": true,
  // copilot
  "chat.mcp.discovery.enabled": true,
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use the Conventional Commits specification to create commit message with scope to keep consistent commit history. Do not use file extension. Must be less than 100 characters."
    }
  ]
}
