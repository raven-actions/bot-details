# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
---
name: Bot Details
description: ðŸ¤– Get bot details (name, email, author/committer) in a proper format for the subsequence steps like git, PR, and more.
author: Dariusz Porowski
branding:
  icon: user # https://feathericons.com/
  color: gray-dark

inputs:
  bot-slug-name:
    description: Bot slug name (GitHub App name)
    required: false
    default: github-actions
  set-env:
    description: "Save these outputs also as environment variables"
    required: false
    type: string
    default: "id, slug, name, email, name-email, html-url, api-url"
  env-prefix:
    description: Prefix for environment variables
    required: false
  github-token:
    description: GitHub token to use for API authentication
    required: false
    default: ${{ github.token }}

outputs:
  id:
    description: Bot id
    value: ${{ steps.bot-details.outputs.id }}
  slug:
    description: Bot slug name
    value: ${{ steps.bot-details.outputs.slug }}
  name:
    description: Bot name
    value: ${{ steps.bot-details.outputs.name }}
  email:
    description: Bot email
    value: ${{ steps.bot-details.outputs.email }}
  name-email:
    description: Bot name and email
    value: ${{ steps.bot-details.outputs.name_email }}
  html-url:
    description: Bot html url
    value: ${{ steps.bot-details.outputs.html_url }}
  api-url:
    description: Bot api url
    value: ${{ steps.bot-details.outputs.api_url }}

runs:
  using: composite
  steps:
    - name: Get bot details
      uses: actions/github-script@v7
      id: bot-details
      with:
        github-token: ${{ inputs.github-token || github.token }}
        script: |
          // Define constants for bot details
          const botSlugName = core.getInput('bot_slug_name') || 'github-actions'
          const botName = `${botSlugName}[bot]`
          const setEnv = core.getInput('set_env').replace(/\s/g, '').split(",") || []
          let envPrefix = core.getInput('env_prefix')
          
          // Format environment prefix if required
          if (setEnv.length && envPrefix) {
            envPrefix = envPrefix.replace(/[^a-z0-9]/gi, '').toUpperCase()
            envPrefix = `${envPrefix}__`
            core.debug(`envPrefix: ${envPrefix}`)
          }
          
          // Fetch bot details from GitHub API
          const { data } = await github.rest.users.getByUsername({ username: botName })
          
          // Extract bot details
          const botId = data.id
          const botEmail = `${botId}+${botName}@users.noreply.github.com`
          const botNameEmail = `${botName} <${botEmail}>`
          const botHtmlUrl = data.html_url
          const botApiUrl = data.url
          
          // Function to set output and export variable if required
          const setOutputAndExportVariable = (name, value) => {
            core.debug(`${name}: ${value}`)
            core.setOutput(name, value)
            if (name of setEnv || name.replace(/_/g, '-') of setEnv) {
              core.exportVariable(`${envPrefix}BOT_${name.toUpperCase()}`, value)
            }
          }
          
          // Set outputs and export variables
          setOutputAndExportVariable('id', botId)
          setOutputAndExportVariable('slug', botSlugName)
          setOutputAndExportVariable('name', botName)
          setOutputAndExportVariable('email', botEmail)
          setOutputAndExportVariable('name_email', botNameEmail)
          setOutputAndExportVariable('html_url', botHtmlUrl)
          setOutputAndExportVariable('api_url', botApiUrl)

      env:
        INPUT_BOT_SLUG_NAME: ${{ inputs.bot-slug-name }}
        INPUT_SET_ENV:       ${{ inputs.set-env }}
        INPUT_ENV_PREFIX:    ${{ inputs.env-prefix }}
