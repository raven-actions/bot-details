# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
---
name: Bot Details
description: ðŸ¤– Get bot details (name, email, author/committer) in a proper format for the subsequence steps like git, PR, and more.
author: Dariusz Porowski
branding:
  icon: user # https://feathericons.com/
  color: gray-dark

inputs:
  bot-slug-name:
    description: Bot slug name (GitHub App name)
    required: false
    default: github-actions
  env-prefix:
    description: Prefix for environment variables
    required: false
  github-token:
    description: GitHub token to use for API authentication
    required: false
    default: ${{ github.token }}

outputs:
  id:
    description: Bot id
    value: ${{ steps.bot-details.outputs.id }}
  slug:
    description: Bot slug name
    value: ${{ steps.bot-details.outputs.slug }}
  name:
    description: Bot name
    value: ${{ steps.bot-details.outputs.name }}
  email:
    description: Bot email
    value: ${{ steps.bot-details.outputs.email }}
  name-email:
    description: Bot name and email
    value: ${{ steps.bot-details.outputs.name_email }}
  html-url:
    description: Bot html url
    value: ${{ steps.bot-details.outputs.html_url }}
  api-url:
    description: Bot api url
    value: ${{ steps.bot-details.outputs.api_url }}

runs:
  using: composite
  steps:
    - name: Get bot details
      uses: actions/github-script@v7
      id: bot-details
      with:
        github-token: ${{ inputs.github-token || github.token }}
        script: |
          const botSlugName = core.getInput('bot_slug_name', {required: false}) || 'github-actions'
          const botName = `${botSlugName}[bot]`

          let envPrefix = core.getInput('env_prefix', { required: false })
          if (envPrefix) {
            envPrefix = envPrefix.replace(/[^a-z0-9]/gi, '').toUpperCase()
            envPrefix = `${envPrefix}__`
          }
          core.debug(`envPrefix: ${envPrefix}`)

          const { data } = await github.rest.users.getByUsername({
            username: botName
          })

          const botId = data.id
          const botEmail = `${botId}+${botName}@users.noreply.github.com`
          const botNameEmail = `${botName} <${botEmail}>`
          const botHtmlUrl = data.html_url
          const botApiUrl = data.url

          core.debug(`botId: ${botId}`)
          core.setOutput('id', botId)
          core.exportVariable(`${envPrefix}BOT_ID`, botId)

          core.debug(`botSlugName: ${botSlugName}`)
          core.setOutput('slug', botSlugName)
          core.exportVariable(`${envPrefix}BOT_SLUG`, botSlugName)

          core.debug(`botName: ${botName}`)
          core.setOutput('name', `${botName}`)
          core.exportVariable(`${envPrefix}BOT_NAME`, botName)

          core.debug(`botEmail: ${botEmail}`)
          core.setOutput('email', `${botEmail}`)
          core.exportVariable(`${envPrefix}BOT_EMAIL`, botEmail)

          core.debug(`botNameEmail: ${botNameEmail}`)
          core.setOutput('name_email', `${botNameEmail}`)
          core.exportVariable(`${envPrefix}BOT_NAME_EMAIL`, botNameEmail)

          core.debug(`botHtmlUrl: ${botHtmlUrl}`)
          core.setOutput('html_url', `${botHtmlUrl}`)
          core.exportVariable(`${envPrefix}BOT_HTML_URL`, botHtmlUrl)

          core.debug(`botApiUrl: ${botApiUrl}`)
          core.setOutput('api_url', `${botApiUrl}`)
          core.exportVariable(`${envPrefix}BOT_API_URL`, botApiUrl)
      env:
        INPUT_BOT_SLUG_NAME: ${{ inputs.bot-slug-name }}
        INPUT_ENV_PREFIX: ${{ inputs.env-prefix }}
